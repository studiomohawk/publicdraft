---
layout: post
title: "DocPad"
date: 2012-07-16 12:50:23
byline: "Yuya Saito"
category: research
---

[DocPad](https://github.com/bevry/docpad)はnode.jsで動作する静的HTMLファイルジェネレータ。[Jekyll](https://github.com/mojombo/jekyll)のnode.jsバージョン。

## インストール

(node.jsはインストールされているとして)  

`npm install -g -f docpad@6.2`  
`docpad install`

`sudo`が必要であれば適宜。

適当なディレクトリを作成して、  
`docpad run`  
とすると

{% highlight sh %}
Which skeleton will you use?
  1) HTML5 Boilerplate
  2) Website
  3) Kitchensink
  4) Hogan
  5) No Skeleton
{% endhighlight %}

というメッセージが表示される。大抵の場合は1か、5を選択することになる。  
DocPadで何ができるのか実際に動かしてみたいという場合は3を選ぶといい。  
DocPadは`src`というディレクトリに`documents`、`files`、`layouts`というサブディレクトリを生成するが、それぞれがどんな役割を持っているか分からない場合は1〜4を選択するといいだろう。

ちなみに`docpad run`はディレクトリに対して1度しか使えない様になっているっぽい。

この時点で`http://localhost:9778/`でDocPadが生成したサイトを閲覧できる。

## プラグイン

DocPadにはすでに[結構な数のプラグイン](https://github.com/bevry/docpad/wiki/Plugins)が存在している。

プラグインのインストールは`docpad run`を実行したディレクトリに`cd`して  
`npm install -f docpad-plugin-プラグイン名`  
としてインストール。  
例えばstylusのプラグインであれば  
`npm install -f docpad-plugin-stylus`  
とする。

以下は個人的に使いそうなプラグイン達。細かい説明はそれぞれのReadmeを読んでほしい。

- [stylus](https://github.com/bevry/docpad-extras/tree/master/plugins/stylus/)

- [markdown](https://github.com/bevry/docpad-extras/tree/master/plugins/markdown/)

- [jade](https://github.com/bevry/docpad-extras/tree/master/plugins/jade/)

- [associated-files](https://github.com/bevry/docpad-extras/tree/master/plugins/associated-files)

- [cleanurls](https://github.com/bevry/docpad-extras/tree/master/plugins/cleanurls/)

- [feedr](https://github.com/bevry/docpad-extras/tree/master/plugins/feedr/)

- [partials](https://github.com/bevry/docpad-extras/tree/master/plugins/partials/)

- [pygments](https://github.com/bevry/docpad-extras/tree/master/plugins/pygments/)

## CLI

- `docpad cli`

docpadのコマンドを利用できる。以下のコマンドを叩くのに利用。  
このコマンドを実行した後は以下のコマンドから`docpad`が必要なくなる。

- `docpad generate`

HTMLを生成。

- `docpad watch`

ファイルの変更を監視、変更に応じてHTMLを生成。

- `server`

プレビュー用のサーバを立ち上げる。

## src/documents、src/layouts、src/files


### src/layouts

このディレクトリにはテンプレートにあたるファイルを格納する。  
ecoというテンプレートエンジンを利用している場合は、`[layout-name].html.eco`という名前でファイルを保存する。

例えばデフォルトテンプレートを作る場合は  
`default.html.eco`となる。

{% highlight html %}
<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <title><%= @document.title or "Joe Doe's Site" %></title>
  <link rel="stylesheet" href="/styles/style.css">
</head>
<body>
<a href="/" class="logo">John Doe loves animals</a>
<%- @content %>
<footer>Copyright 2012 John Doe.</footer>
</body>
</html>
{% endhighlight %}

`<%- @content %>`にコンテンツが挿入される。

### src/files

CSSやJavaScript、画像などを格納するためのディレクトリ。  

例えば`src/files/styles/style.css`というファイルは`out/styles/style.css`というディレクトリに出力される。`out`ディレクトリが生成済みのファイル群が格納される。

### src/documents

このディレクトリにコンテンツを格納する。  
`src/documents`に`index.html`というファイルを作成したとして、

{% highlight html %}
---
layout: default
title: "John Doe loves animals"
---

<article>
  <h2>My favorite animal : the cat !</h2>

  <div class="date">written on <span class="date">2012-05-19</span></div>
  <p>Who doesn't love cats ? </p>
</article>
{% endhighlight %}

のように記述すればいい。  

`---`で囲まれている部分はメタデータを指定する箇所。  
`layout`はテンプレートを指定し、`title`はタイトルを指定する。  
ほかにも`tags`、`content`、`ignored`、`date`などを利用できる。  
さらに自分でカスタムすることも可能。

先ほどの`src/layouts`で示した`<%- @content %>`に上記のコンテンツが挿入される。


以上に加えて、  
DocPadが提供している[ビギナーガイド](https://github.com/bevry/docpad/wiki/Beginner-Guide)にかなり細かい部分まで解説してある。

